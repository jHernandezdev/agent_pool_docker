trigger:
  branches:
   include:     
     - main
  paths:
    include:
    - k8s

stages:
  - stage: CD
    displayName: Deploy to K8S Agents
    jobs:
    - deployment: K8S
      displayName: Deploy to K8S Agents
      condition: eq(variables['Build.SourceBranchName'], 'main')
      pool:
          vmImage: 'ubuntu-latest'
      environment: Linux-Agents-Pool.default
      variables:
      - group: agents_pools_env
      strategy:
        canary:          
          increments: [10,20]  
          preDeploy:
            steps:            
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
              - checkout: self        
              - task: Kubernetes@1
                displayName: Creacion del ConfigMap
                inputs:                  
                  forceUpdateConfigMap: true
                  configMapName: agentenvironmentvariables
                  configMapArguments: 
                    --from-literal=AZP_URL="$(AZP_URL)" 
                    --from-literal=AZP_TOKEN="$(AZP_TOKEN)"                     
              - task: KubernetesManifest@0
                displayName: Creacion del deployment y service
                inputs:
                  action: deploy
                  manifests: ./k8s/agents.yml
                  containers: jmhhcontainerregistry.azurecr.io/pedidosweb:latest          
          postRouteTraffic:
            steps:
            - script: echo health check post-route traffic
          on:
            failure:
              steps:
              - script: echo Restore from backup! This is on failure
            success:
              steps:
              - script: echo Notify! This is on success
      